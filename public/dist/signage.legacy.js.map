{"version":3,"file":"signage.legacy.js","sources":["../js/core/constants.js","../js/core/uiHelpers.js","../js/core/formatting.js","../js/core/refresh.js","../js/sse/eventStream.js","../js/pages/signage/index.js"],"sourcesContent":["const API_BASE_URL = '/api';\nconst SSE_URL = `${API_BASE_URL}/events`;\n\nconst UI_TEXT = {\n  en: {\n    connecting: 'Connecting to server...',\n    connected: 'Live Connection Active',\n    disconnected: 'Connection lost. Retrying...',\n    announcementPlaceholder: 'Announcements',\n    historyPlaceholder: '----',\n    skippedPlaceholder: '----',\n    loading: 'Loading...',\n    errorPrefix: 'Error: ',\n    successPrefix: 'Success: ',\n  },\n  th: {\n    connecting: 'กำลังเชื่อมต่อเซิร์ฟเวอร์...',\n    connected: 'เชื่อมต่อสดแล้ว',\n    disconnected: 'ตัดการเชื่อมต่อ - กำลังลองใหม่...',\n    announcementPlaceholder: 'ประกาศ',\n    historyPlaceholder: 'รอการเรียก...',\n    skippedPlaceholder: 'ไม่มีคิวที่ข้ามไป',\n    loading: 'กำลังโหลด...',\n    errorPrefix: 'ข้อผิดพลาด: ',\n    successPrefix: 'สำเร็จ: ',\n  },\n};\n\nlet currentLanguage = 'en';\n\nfunction getCurrentLanguage() {\n  return currentLanguage;\n}\n\nfunction setCurrentLanguage(lang) {\n  if (lang && UI_TEXT[lang]) {\n    currentLanguage = lang;\n  } else {\n    currentLanguage = 'en';\n  }\n  if (typeof window !== 'undefined') {\n    window.currentGlobalLanguage = currentLanguage;\n  }\n  return currentLanguage;\n}\n\nfunction getLabels(lang = getCurrentLanguage()) {\n  return UI_TEXT[lang] || UI_TEXT.en;\n}\n\nexport { API_BASE_URL, SSE_URL, UI_TEXT, getCurrentLanguage, setCurrentLanguage, getLabels };\n","function renderCallList(container, items, options = {}) {\n  if (!container) return;\n\n  const {\n    maxItems = Array.isArray(items) ? items.length : 0,\n    placeholderText = '',\n    itemClass = 'history-item flex justify-between items-center',\n    placeholderClass = `${itemClass} italic`,\n    highlightClass = '',\n    timestampClass = 'text-xs text-gray-400',\n    reverse = false,\n    showTimestamp = true,\n    timestampFormatter = (value) => (value ?? ''),\n    sanitizer = (value) => (value == null ? '' : String(value)),\n  } = options;\n\n  container.innerHTML = '';\n  const data = Array.isArray(items) ? items.slice(0, maxItems) : [];\n  if (reverse) data.reverse();\n\n  if (data.length === 0) {\n    const placeholder = document.createElement('li');\n    placeholder.className = placeholderClass.trim();\n    placeholder.textContent = placeholderText;\n    container.appendChild(placeholder);\n    return;\n  }\n\n  data.forEach((entry) => {\n    const li = document.createElement('li');\n    li.className = itemClass;\n\n    const labelSpan = document.createElement('span');\n    const idStrong = document.createElement('strong');\n    idStrong.className = ['font-semibold', highlightClass].filter(Boolean).join(' ');\n    idStrong.textContent = sanitizer(entry?.id ?? '----');\n\n    const arrowSpan = document.createElement('span');\n    arrowSpan.textContent = ' → ';\n\n    const locationStrong = document.createElement('strong');\n    locationStrong.className = ['font-semibold', highlightClass].filter(Boolean).join(' ');\n    locationStrong.textContent = sanitizer(entry?.location ?? '----');\n\n    labelSpan.appendChild(idStrong);\n    labelSpan.appendChild(arrowSpan);\n    labelSpan.appendChild(locationStrong);\n    li.appendChild(labelSpan);\n\n    if (showTimestamp) {\n      const tsSpan = document.createElement('span');\n      tsSpan.className = timestampClass;\n      tsSpan.textContent = timestampFormatter(entry?.timestamp ?? '');\n      li.appendChild(tsSpan);\n    }\n\n    container.appendChild(li);\n  });\n}\n\nfunction createSseIndicatorUpdater(element, options = {}) {\n  if (!element) return () => {};\n\n  const {\n    statusClassMap = {},\n    baseClass = element.className,\n    setDataset = false,\n    fallbackMessage = '',\n    keepClasses = false,\n  } = options;\n\n  const classMap = { default: '', ...statusClassMap };\n\n  return ({ status, message } = {}) => {\n    const normalizedStatus = status || '';\n    const text = message || fallbackMessage || normalizedStatus;\n    element.textContent = text;\n\n    if (setDataset) {\n      // Keep attribute updated for older browsers that lack proper dataset setters\n      try {\n        if (element && typeof element.setAttribute === 'function') {\n          element.setAttribute('data-status', normalizedStatus);\n        }\n      } catch (e) {}\n      if (element.dataset) {\n        element.dataset.status = normalizedStatus;\n      }\n    }\n\n    if (!keepClasses) {\n      const mappedClass = Object.prototype.hasOwnProperty.call(classMap, normalizedStatus)\n        ? classMap[normalizedStatus]\n        : classMap.default;\n      element.className = [baseClass, mappedClass].filter(Boolean).join(' ');\n    }\n  };\n}\n\nexport { renderCallList, createSseIndicatorUpdater };\n","function sanitizeText(value) {\n  if (value === null || typeof value === 'undefined') {\n    return '';\n  }\n  const temp = document.createElement('div');\n  temp.textContent = String(value);\n  return temp.innerHTML;\n}\n\nfunction formatDisplayTime(isoTimestamp) {\n  if (!isoTimestamp) {\n    return '';\n  }\n  try {\n    const date = new Date(isoTimestamp);\n    return date.toLocaleTimeString(navigator.language, {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: false,\n    });\n  } catch (error) {\n    console.error('FORMAT', 'Failed to format timestamp', isoTimestamp, error);\n    return 'Invalid Time';\n  }\n}\n\nexport { sanitizeText, formatDisplayTime };\n","function scheduleAutoRefresh({\n  refreshIntervalMs = 30 * 60 * 1000,\n  warningMs = 10_000,\n  shouldDelay = () => false,\n  onBeforeRefresh = () => {},\n} = {}) {\n  if (refreshIntervalMs <= warningMs) {\n    console.warn('REFRESH', 'Refresh interval should be greater than warning window. Skipping auto refresh setup.');\n    return () => {};\n  }\n\n  let warnTimerId = null;\n  let refreshTimerId = null;\n  let cancelled = false;\n\n  const clearTimers = () => {\n    if (warnTimerId) {\n      clearTimeout(warnTimerId);\n      warnTimerId = null;\n    }\n    if (refreshTimerId) {\n      clearTimeout(refreshTimerId);\n      refreshTimerId = null;\n    }\n  };\n\n  const attemptRefresh = () => {\n    if (cancelled) return;\n    if (shouldDelay()) {\n      console.info('REFRESH', 'Delaying automatic refresh due to active workload.');\n      refreshTimerId = setTimeout(attemptRefresh, warningMs);\n      return;\n    }\n    try {\n      onBeforeRefresh();\n    } catch (error) {\n      console.error('REFRESH', 'Error in onBeforeRefresh callback', error);\n    }\n    window.location.reload();\n  };\n\n  warnTimerId = setTimeout(() => {\n    console.warn('REFRESH', `Page will refresh in ${warningMs / 1000}s unless activity prevents it.`);\n    refreshTimerId = setTimeout(attemptRefresh, warningMs);\n  }, refreshIntervalMs - warningMs);\n\n  return () => {\n    cancelled = true;\n    clearTimers();\n  };\n}\n\nexport { scheduleAutoRefresh };\n","import { getLabels } from '../core/constants.js';\n\nconst MAX_QUICK_RECONNECTION_ATTEMPTS = 3;\nconst SHORT_RETRY_DELAY_MS = 3000;\nconst MEDIUM_RETRY_DELAY_MS = 10000;\nconst LONG_RETRY_DELAY_MS = 30000;\nconst HEARTBEAT_IDLE_THRESHOLD_MS = 30000; // assume backend keeps events fairly frequent\n\nclass EventStream {\n  constructor(url, { labelProvider = getLabels, heartbeatMs = HEARTBEAT_IDLE_THRESHOLD_MS } = {}) {\n    this.url = url;\n    this.labelProvider = labelProvider;\n    this.heartbeatMs = heartbeatMs;\n\n    this.eventSource = null;\n    this.reconnectionAttempts = 0;\n    this.currentRetryDelay = SHORT_RETRY_DELAY_MS;\n    this.retryTimeoutId = null;\n    this.heartbeatTimerId = null;\n    this.lastActivityAt = Date.now();\n    this.lastStatus = null;\n    this.lastStatusMessage = null;\n    this.listeners = new Map();\n\n    this.handleNamedEvent = this.handleNamedEvent.bind(this);\n    this.handleOnMessage = this.handleOnMessage.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleNetworkOnline = this.handleNetworkOnline.bind(this);\n    this.handleNetworkOffline = this.handleNetworkOffline.bind(this);\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('online', this.handleNetworkOnline);\n      window.addEventListener('offline', this.handleNetworkOffline);\n    }\n  }\n\n  on(eventName, handler) {\n    const normalized = String(eventName);\n    if (!this.listeners.has(normalized)) {\n      this.listeners.set(normalized, new Set());\n    }\n    const handlers = this.listeners.get(normalized);\n    handlers.add(handler);\n    return () => this.off(normalized, handler);\n  }\n\n  off(eventName, handler) {\n    const handlers = this.listeners.get(eventName);\n    if (!handlers) return;\n    handlers.delete(handler);\n    if (handlers.size === 0) {\n      this.listeners.delete(eventName);\n    }\n  }\n\n  emit(eventName, detail) {\n    const handlers = this.listeners.get(eventName);\n    if (!handlers) return;\n    handlers.forEach((handler) => {\n      try {\n        handler({ detail });\n      } catch (error) {\n        console.error('EventStream', `Listener for \"${eventName}\" failed`, error);\n      }\n    });\n  }\n\n  connect() {\n    if (typeof window !== 'undefined' && !('EventSource' in window)) {\n      this.setStatus('unsupported', {\n        message: 'Live updates not supported in this browser.',\n      });\n      return;\n    }\n\n    if (this.eventSource && (this.eventSource.readyState === EventSource.OPEN || this.eventSource.readyState === EventSource.CONNECTING)) {\n      return;\n    }\n\n    this.clearRetryTimer();\n    this.ensureHeartbeatTimer();\n    this.setStatus('connecting');\n    this.lastActivityAt = Date.now();\n\n    try {\n      this.eventSource = new EventSource(this.url);\n    } catch (error) {\n      console.error('EventStream', 'Failed to create EventSource instance', error);\n      this.setStatus('disconnected', { detail: error });\n      this.scheduleReconnect();\n      return;\n    }\n\n    this.eventSource.onopen = () => {\n      this.lastActivityAt = Date.now();\n      this.reconnectionAttempts = 0;\n      this.currentRetryDelay = SHORT_RETRY_DELAY_MS;\n      this.markActivity();\n    };\n\n    this.eventSource.onmessage = this.handleOnMessage;\n    this.eventSource.addEventListener('queue_update', this.handleNamedEvent);\n    this.eventSource.addEventListener('announcement_status', this.handleNamedEvent);\n    this.eventSource.addEventListener('tts_complete', this.handleNamedEvent);\n    this.eventSource.onerror = this.handleError;\n  }\n\n  disconnect() {\n    this.clearRetryTimer();\n    this.clearHeartbeatTimer();\n    this.closeSource();\n  }\n\n  destroy() {\n    this.disconnect();\n    this.listeners.clear();\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('online', this.handleNetworkOnline);\n      window.removeEventListener('offline', this.handleNetworkOffline);\n    }\n  }\n\n  handleNamedEvent(event) {\n    this.processFrame({ data: event.data, type: event.type });\n  }\n\n  handleOnMessage(event) {\n    this.processFrame({ data: event.data, type: event.type });\n  }\n\n  handleError(event) {\n    const readyState = this.eventSource?.readyState;\n    const detail = event instanceof Event ? { type: event.type } : event;\n\n    if (readyState === EventSource.CLOSED) {\n      this.setStatus('disconnected', { detail });\n    } else {\n      // Treat transient errors as connecting to avoid flashing red UI for automatic retries.\n      this.setStatus('connecting', { detail });\n    }\n\n    this.closeSource();\n    this.scheduleReconnect();\n  }\n\n  handleNetworkOnline() {\n    if (!this.eventSource) {\n      this.connect();\n    }\n  }\n\n  handleNetworkOffline() {\n    this.setStatus('disconnected', { message: 'Offline — waiting for connection…' });\n    this.closeSource();\n  }\n\n  processFrame(event) {\n    if (!event || !event.data) {\n      return;\n    }\n\n    if (typeof event.data === 'string' && event.data.startsWith(':')) {\n      return;\n    }\n\n    let parsedPayload;\n    let eventKey;\n\n    try {\n      const payload = JSON.parse(event.data);\n      const rawType = payload.type || event.type || '';\n      eventKey = this.normalizeType(rawType);\n\n      if (!eventKey) {\n        console.warn('EventStream', 'Received payload without a recognizable type', payload);\n        return;\n      }\n\n      if (payload.data !== undefined) {\n        parsedPayload = payload.data;\n      } else {\n        const { type: _unused, ...rest } = payload;\n        parsedPayload = rest;\n      }\n    } catch (error) {\n      console.error('EventStream', 'Unable to parse SSE payload', error, event.data);\n      return;\n    }\n\n    this.markActivity();\n    this.emit(eventKey, parsedPayload);\n  }\n\n  scheduleReconnect() {\n    this.reconnectionAttempts += 1;\n\n    const labels = this.labelProvider();\n    const seconds = this.currentRetryDelay / 1000;\n\n    const shouldSignalDisconnected = this.reconnectionAttempts > MAX_QUICK_RECONNECTION_ATTEMPTS;\n    const statusKey = shouldSignalDisconnected ? 'disconnected' : 'connecting';\n    const defaultMessage = shouldSignalDisconnected ? labels.disconnected : labels.connecting;\n    const message = `${defaultMessage || statusKey} (${seconds}s)`;\n\n    this.setStatus(statusKey, { message });\n\n    this.clearRetryTimer();\n    this.retryTimeoutId = setTimeout(() => {\n      this.connect();\n    }, this.currentRetryDelay);\n\n    if (this.reconnectionAttempts <= MAX_QUICK_RECONNECTION_ATTEMPTS) {\n      this.currentRetryDelay = SHORT_RETRY_DELAY_MS;\n    } else if (this.reconnectionAttempts <= MAX_QUICK_RECONNECTION_ATTEMPTS * 2) {\n      this.currentRetryDelay = MEDIUM_RETRY_DELAY_MS;\n    } else {\n      this.currentRetryDelay = LONG_RETRY_DELAY_MS;\n    }\n  }\n\n  setStatus(statusKey, { message, detail } = {}) {\n    if (!statusKey) return;\n\n    if (statusKey === this.lastStatus && !message && !detail) {\n      return;\n    }\n\n    const labels = this.labelProvider();\n    const resolvedMessage = message || labels[statusKey] || statusKey;\n\n    if (statusKey === this.lastStatus && resolvedMessage === this.lastStatusMessage) {\n      return;\n    }\n\n    this.lastStatus = statusKey;\n    this.lastStatusMessage = resolvedMessage;\n    this.emit('status', { status: statusKey, message: resolvedMessage, detail });\n  }\n\n  ensureHeartbeatTimer() {\n    if (this.heartbeatMs <= 0 || this.heartbeatTimerId) {\n      return;\n    }\n    this.heartbeatTimerId = setInterval(() => {\n      this.syncStatusWithReadyState();\n    }, Math.max(2000, Math.floor(this.heartbeatMs / 2)));\n  }\n\n  clearRetryTimer() {\n    if (this.retryTimeoutId) {\n      clearTimeout(this.retryTimeoutId);\n      this.retryTimeoutId = null;\n    }\n  }\n\n  clearHeartbeatTimer() {\n    if (this.heartbeatTimerId) {\n      clearInterval(this.heartbeatTimerId);\n      this.heartbeatTimerId = null;\n    }\n  }\n\n  closeSource() {\n    if (!this.eventSource) return;\n    try {\n      this.eventSource.close();\n    } catch (error) {\n      console.warn('EventStream', 'Error while closing EventSource', error);\n    }\n    this.eventSource = null;\n  }\n\n  normalizeType(type) {\n    if (!type) return '';\n    return String(type).toLowerCase().replace(/[^a-z0-9]+/g, '');\n  }\n\n  markActivity() {\n    this.lastActivityAt = Date.now();\n    if (this.eventSource?.readyState === EventSource.OPEN) {\n      this.setStatus('connected');\n    }\n  }\n\n  syncStatusWithReadyState() {\n    if (!this.eventSource) {\n      return;\n    }\n\n    const readyState = this.eventSource.readyState;\n    if (readyState === EventSource.OPEN) {\n      this.setStatus('connected');\n      return;\n    }\n\n    if (readyState === EventSource.CONNECTING) {\n      this.setStatus('connecting');\n      return;\n    }\n\n    if (readyState === EventSource.CLOSED) {\n      this.setStatus('disconnected');\n      if (!this.retryTimeoutId) {\n        this.scheduleReconnect();\n      }\n    }\n  }\n}\n\nexport { EventStream };\n","import { API_BASE_URL, SSE_URL, getLabels, setCurrentLanguage } from '../../core/constants.js';\nimport { renderCallList, createSseIndicatorUpdater } from '../../core/uiHelpers.js';\nimport { sanitizeText, formatDisplayTime } from '../../core/formatting.js';\nimport { scheduleAutoRefresh } from '../../core/refresh.js';\nimport { EventStream } from '../../sse/eventStream.js';\n\nconst MAX_HISTORY_ITEMS_DISPLAY = 7;\nconst MAX_SKIPPED_ITEMS_TO_DISPLAY = 4;\nconst TTS_TIMEOUT_DURATION = 10_000;\n\nclass SignagePage {\n  constructor() {\n    this.dom = this.queryDom();\n    this.eventStream = new EventStream(SSE_URL, { labelProvider: getLabels });\n    this.updateSseIndicator = createSseIndicatorUpdater(this.dom.sseStatusIndicator, {\n      setDataset: true,\n      keepClasses: true,\n    });\n\n    this.orderedTtsLangCodes = [];\n    this.eventQueue = [];\n    this.currentProcessingEvent = null;\n    this.audioPlaybackQueue = [];\n    this.isAudioFilePlaying = false;\n    this.bannerIntervalId = null;\n    this.lastShownCallData = null;\n    this.autoRefreshCancel = () => {};\n    this.clock = this.createClock();\n\n    window.SignageEventQueue = this.eventQueue;\n    Object.defineProperty(window, 'SignageCurrentEvent', {\n      configurable: true,\n      enumerable: false,\n      get: () => this.currentProcessingEvent,\n    });\n  }\n\n  queryDom() {\n    const byId = (id) => document.getElementById(id);\n    return {\n      callIdElement: byId('current-call-id'),\n      locationElement: byId('current-location'),\n      listHistoryCalls: byId('list-history-calls'),\n      listSkippedCalls: byId('list-skipped-calls'),\n      announcementBannerContainer: byId('announcement-banner-container'),\n      announcementPlaceholder: byId('announcement-placeholder'),\n      chimeAudio: byId('chimeAudio'),\n      announcementAudioPlayer: byId('announcement-audio-player'),\n      ttsAudioPlayer: byId('tts-audio-player'),\n      sseStatusIndicator: byId('sse-status-indicator'),\n      dateElement: byId('date'),\n      timeElement: byId('time'),\n    };\n  }\n\n  ensureRequiredElements() {\n    const required = {\n      callIdElement: this.dom.callIdElement,\n      locationElement: this.dom.locationElement,\n      listHistoryCalls: this.dom.listHistoryCalls,\n      listSkippedCalls: this.dom.listSkippedCalls,\n      announcementBannerContainer: this.dom.announcementBannerContainer,\n      chimeAudio: this.dom.chimeAudio,\n      announcementAudioPlayer: this.dom.announcementAudioPlayer,\n      ttsAudioPlayer: this.dom.ttsAudioPlayer,\n    };\n\n    const missing = Object.entries(required)\n      .filter(([, value]) => !value)\n      .map(([key]) => key);\n\n    if (missing.length > 0) {\n      console.error('SignageUI', 'Missing required DOM elements:', missing.join(', '));\n      return false;\n    }\n\n    return true;\n  }\n\n  async init() {\n    if (!this.ensureRequiredElements()) {\n      return;\n    }\n\n    const pageLanguage = document.documentElement.lang || 'en';\n    setCurrentLanguage(pageLanguage);\n    this.updateStaticPlaceholders();\n    this.setupAutoRefresh();\n    this.attachEventStreamHandlers();\n\n    await this.fetchOrderedLanguages();\n    await this.fetchInitialState();\n\n    this.clock.start();\n  }\n\n  setupAutoRefresh() {\n    this.autoRefreshCancel = scheduleAutoRefresh({\n      shouldDelay: () => this.shouldDelayRefresh(),\n    });\n\n    window.addEventListener('beforeunload', () => {\n      this.autoRefreshCancel();\n      this.clock.stop();\n    });\n  }\n\n  attachEventStreamHandlers() {\n    this.eventStream.on('queueupdate', ({ detail }) => this.handleQueueUpdate(detail));\n    this.eventStream.on('announcementstatus', ({ detail }) => this.handleAnnouncementStatus(detail));\n    this.eventStream.on('ttscomplete', ({ detail }) => this.handleTtsComplete(detail));\n    this.eventStream.on('status', ({ detail }) => this.updateSseIndicator(detail));\n    this.eventStream.connect();\n  }\n\n  async fetchOrderedLanguages() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/tts/ordered-languages`);\n      if (response.ok) {\n        this.orderedTtsLangCodes = await response.json();\n      } else {\n        console.error('SignageUI', 'Failed to fetch ordered TTS languages', response.status, response.statusText);\n        this.orderedTtsLangCodes = [];\n      }\n    } catch (error) {\n      console.error('SignageUI', 'Network error while fetching ordered TTS languages', error);\n      this.orderedTtsLangCodes = [];\n    }\n  }\n\n  async fetchInitialState() {\n    try {\n      const [queueRes, annRes] = await Promise.allSettled([\n        fetch(`${API_BASE_URL}/queue/state`),\n        fetch(`${API_BASE_URL}/announcements/status`),\n      ]);\n\n      if (queueRes.status === 'fulfilled' && queueRes.value.ok) {\n        const queueState = await queueRes.value.json();\n        this.updateQueueDisplay(queueState);\n        if (queueState.current_call) {\n          this.updateCurrentCallDisplay(queueState.current_call);\n          this.lastShownCallData = { ...queueState.current_call };\n        } else {\n          this.updateCurrentCallDisplay(null);\n          this.lastShownCallData = null;\n        }\n      } else {\n        console.error('SignageUI', 'Failed to fetch initial queue state');\n        this.updateQueueDisplay(null);\n        this.updateCurrentCallDisplay(null);\n        this.lastShownCallData = null;\n      }\n\n      if (annRes.status === 'fulfilled' && annRes.value.ok) {\n        const announcementStatus = await annRes.value.json();\n        this.updateAnnouncementDisplay(announcementStatus);\n      } else {\n        console.error('SignageUI', 'Failed to fetch initial announcement status');\n        this.updateAnnouncementDisplay(null);\n      }\n    } catch (error) {\n      console.error('SignageUI', 'Network error during initial state fetch', error);\n      this.updateQueueDisplay(null);\n      this.updateCurrentCallDisplay(null);\n      this.updateAnnouncementDisplay(null);\n      this.lastShownCallData = null;\n    } finally {\n      this.processNextEventFromQueue();\n    }\n  }\n\n  updateCurrentCallDisplay(callData) {\n    const id = callData?.id ? sanitizeText(callData.id) : '----';\n    const location = callData?.location ? sanitizeText(callData.location) : '----';\n    if (this.dom.callIdElement) this.dom.callIdElement.textContent = id;\n    if (this.dom.locationElement) this.dom.locationElement.textContent = location;\n  }\n\n  updateQueueDisplay(queueState) {\n    const labels = getLabels();\n\n    renderCallList(this.dom.listHistoryCalls, queueState?.completed_history, {\n      maxItems: MAX_HISTORY_ITEMS_DISPLAY,\n      placeholderText: labels.historyPlaceholder || '----',\n      itemClass: 'history-item flex justify-between items-center',\n      placeholderClass: 'history-item italic text-gray-500',\n      timestampFormatter: formatDisplayTime,\n      sanitizer: sanitizeText,\n    });\n\n    renderCallList(this.dom.listSkippedCalls, queueState?.skipped_history, {\n      maxItems: MAX_SKIPPED_ITEMS_TO_DISPLAY,\n      placeholderText: labels.skippedPlaceholder || '----',\n      itemClass: 'history-item flex justify-between items-center',\n      placeholderClass: 'history-item italic text-gray-500',\n      highlightClass: 'text-yellow-400',\n      timestampFormatter: formatDisplayTime,\n      sanitizer: sanitizeText,\n    });\n  }\n\n  updateAnnouncementDisplay(announcementStatus) {\n    const container = this.dom.announcementBannerContainer;\n    if (!container) return;\n\n    if (this.bannerIntervalId) {\n      clearInterval(this.bannerIntervalId);\n      this.bannerIntervalId = null;\n    }\n\n    const { wrapper, span } = this.ensureBannerPlaceholder();\n    this.clearBannerContainer(wrapper);\n\n    if (!announcementStatus || !Array.isArray(announcementStatus.current_banner_playlist) || announcementStatus.current_banner_playlist.length === 0) {\n      if (wrapper && !container.contains(wrapper)) {\n        container.appendChild(wrapper);\n      }\n      if (span) {\n        span.textContent = getLabels().announcementPlaceholder || 'Announcements';\n      }\n      return;\n    }\n\n    if (wrapper) {\n      wrapper.classList.add('hidden');\n    }\n\n    const banners = announcementStatus.current_banner_playlist.slice();\n    let currentIndex = 0;\n\n    const displayBanner = () => {\n      if (banners.length === 0) return;\n      const mediaUrl = banners[currentIndex];\n      const extension = mediaUrl.split('.').pop().toLowerCase();\n      this.clearBannerContainer(wrapper);\n\n      if (['jpg', 'jpeg', 'png', 'gif', 'webp', 'svg'].includes(extension)) {\n        const img = document.createElement('img');\n        img.src = mediaUrl;\n        img.alt = 'Announcement Banner';\n        img.className = 'banner-media';\n        container.appendChild(img);\n      } else if (['mp4', 'webm', 'ogg', 'mov'].includes(extension)) {\n        const video = document.createElement('video');\n        video.src = mediaUrl;\n        video.className = 'banner-media';\n        video.autoplay = true;\n        video.muted = true;\n        video.playsInline = true;\n        video.loop = banners.length === 1;\n        if (banners.length > 1) {\n          video.onended = () => {\n            currentIndex = (currentIndex + 1) % banners.length;\n            displayBanner();\n          };\n        }\n        container.appendChild(video);\n        video.play().catch((error) => console.error('SignageUI', 'Error playing banner video', mediaUrl, error));\n      } else {\n        console.warn('SignageUI', 'Unsupported banner media type', mediaUrl);\n        if (wrapper && !container.contains(wrapper)) {\n          container.appendChild(wrapper);\n        }\n      }\n    };\n\n    displayBanner();\n\n    if (banners.length > 1) {\n      const isImagePlaylist = banners.every((url) => {\n        const ext = url.split('.').pop().toLowerCase();\n        return ['jpg', 'jpeg', 'png', 'gif', 'webp', 'svg'].includes(ext);\n      });\n\n      if (isImagePlaylist) {\n        const cycleMs = (announcementStatus.banner_cycle_interval_seconds || 10) * 1000;\n        this.bannerIntervalId = setInterval(() => {\n          currentIndex = (currentIndex + 1) % banners.length;\n          displayBanner();\n        }, cycleMs);\n      }\n    }\n  }\n\n  ensureBannerPlaceholder() {\n    const container = this.dom.announcementBannerContainer;\n    let placeholder = this.dom.announcementPlaceholder;\n    if (!placeholder || !placeholder.parentElement) {\n      const wrapper = document.createElement('div');\n      wrapper.className = 'w-full h-full flex justify-center items-center bg-gray-750 rounded';\n      placeholder = document.createElement('span');\n      placeholder.id = 'announcement-placeholder';\n      placeholder.className = 'text-gray-500 text-sm md:text-base';\n      placeholder.textContent = getLabels().announcementPlaceholder || 'Announcements';\n      wrapper.appendChild(placeholder);\n      if (container) {\n        container.appendChild(wrapper);\n      }\n      this.dom.announcementPlaceholder = placeholder;\n      return { wrapper, span: placeholder };\n    }\n\n    return { wrapper: placeholder.parentElement, span: placeholder };\n  }\n\n  clearBannerContainer(placeholderWrapper = null) {\n    const container = this.dom.announcementBannerContainer;\n    if (!container) return;\n    Array.from(container.children).forEach((child) => {\n      if (!placeholderWrapper || child !== placeholderWrapper) {\n        container.removeChild(child);\n      }\n    });\n  }\n\n  handleQueueUpdate(queueState) {\n    this.updateQueueDisplay(queueState);\n\n    const newCall = queueState?.current_call;\n    if (newCall) {\n      let shouldQueue = true;\n\n      if (this.currentProcessingEvent?.type === 'call' &&\n          this.currentProcessingEvent.id === newCall.id &&\n          this.currentProcessingEvent.location === newCall.location) {\n        shouldQueue = false;\n      }\n\n      if (shouldQueue && this.eventQueue.some((evt) => evt.type === 'call' && evt.id === newCall.id && evt.location === newCall.location)) {\n        shouldQueue = false;\n      }\n\n      if (shouldQueue) {\n        const callEvent = {\n          type: 'call',\n          id: newCall.id,\n          location: newCall.location,\n          callData: { ...newCall },\n          requiredTts: Array.isArray(this.orderedTtsLangCodes) && this.orderedTtsLangCodes.length > 0\n            ? [...this.orderedTtsLangCodes]\n            : [],\n          receivedTtsUrls: [],\n          chimeFinished: false,\n          ttsReady: false,\n          timestamp: new Date().toISOString(),\n        };\n        this.eventQueue.push(callEvent);\n        this.processNextEventFromQueue();\n      }\n    } else if (!this.currentProcessingEvent && this.eventQueue.length === 0) {\n      this.processNextEventFromQueue();\n    }\n  }\n\n  handleAnnouncementStatus(announcementStatus) {\n    this.updateAnnouncementDisplay(announcementStatus);\n\n    const playlist = announcementStatus?.current_audio_playlist || [];\n    if (playlist.length === 0) {\n      return;\n    }\n\n    const primarySrc = playlist[0];\n    let shouldQueue = true;\n\n    if (this.currentProcessingEvent?.type === 'announcement' &&\n        this.currentProcessingEvent.audioSequence.some((item) => item.src === primarySrc)) {\n      shouldQueue = false;\n    }\n\n    if (shouldQueue && this.eventQueue.some((evt) => evt.type === 'announcement' && evt.audioSequence.some((item) => item.src === primarySrc))) {\n      shouldQueue = false;\n    }\n\n    if (!shouldQueue) {\n      return;\n    }\n\n    const announcementEvent = {\n      type: 'announcement',\n      audioSequence: playlist.map((src) => ({ src, playerType: 'announcement' })),\n    };\n\n    this.eventQueue.push(announcementEvent);\n    this.processNextEventFromQueue();\n  }\n\n  handleTtsComplete(ttsData) {\n    if (!ttsData || !ttsData.id || !ttsData.location || !Array.isArray(ttsData.audio_urls)) {\n      console.warn('SignageUI', 'Invalid TTS payload received', ttsData);\n      return;\n    }\n\n    let targetEvent = null;\n    if (this.currentProcessingEvent?.type === 'call' &&\n        this.currentProcessingEvent.id === ttsData.id &&\n        this.currentProcessingEvent.location === ttsData.location) {\n      targetEvent = this.currentProcessingEvent;\n    } else {\n      targetEvent = this.eventQueue.find((evt) => evt.type === 'call' && evt.id === ttsData.id && evt.location === ttsData.location);\n    }\n\n    if (!targetEvent) {\n      console.warn('SignageUI', 'TTS payload does not match any queued call', ttsData);\n      return;\n    }\n\n    if (!Array.isArray(targetEvent.requiredTts) || targetEvent.requiredTts.length === 0) {\n      targetEvent.requiredTts = [];\n    }\n\n    if (!Array.isArray(targetEvent.receivedTtsUrls)) {\n      targetEvent.receivedTtsUrls = [];\n    }\n\n    const langIndex = targetEvent.requiredTts.indexOf(ttsData.lang);\n    if (langIndex !== -1) {\n      targetEvent.requiredTts.splice(langIndex, 1);\n    }\n\n    if (targetEvent.receivedTtsUrls.length === 0) {\n      targetEvent.receivedTtsUrls = [...ttsData.audio_urls];\n    }\n\n    const allTtsAvailable = targetEvent.requiredTts.length === 0 || targetEvent.receivedTtsUrls.length > 0;\n\n    if (allTtsAvailable && !targetEvent.ttsReady) {\n      targetEvent.ttsReady = true;\n\n      if (targetEvent.ttsWaitTimeoutId) {\n        clearTimeout(targetEvent.ttsWaitTimeoutId);\n        targetEvent.ttsWaitTimeoutId = null;\n      }\n\n      if (this.currentProcessingEvent === targetEvent) {\n        const newItems = targetEvent.receivedTtsUrls\n          .filter((url) => url && !this.audioPlaybackQueue.some((item) => item.src === url && item.playerType === 'tts'))\n          .map((url) => ({ src: url, playerType: 'tts' }));\n\n        if (newItems.length > 0) {\n          const chimeIdx = this.audioPlaybackQueue.findIndex((item) => item.playerType === 'chime');\n          if (chimeIdx !== -1 && !targetEvent.chimeFinished) {\n            this.audioPlaybackQueue.splice(chimeIdx + 1, 0, ...newItems);\n          } else {\n            this.audioPlaybackQueue.push(...newItems);\n          }\n        }\n\n        if (targetEvent.chimeFinished && !this.isAudioFilePlaying) {\n          this.playNextAudioFileInSequence();\n        }\n      }\n    }\n  }\n\n  processNextEventFromQueue() {\n    if (this.currentProcessingEvent || this.isAudioFilePlaying) {\n      return;\n    }\n\n    if (this.eventQueue.length === 0) {\n      if (!this.lastShownCallData) {\n        this.updateCurrentCallDisplay(null);\n      } else {\n        this.updateCurrentCallDisplay(this.lastShownCallData);\n      }\n      return;\n    }\n\n    this.currentProcessingEvent = this.eventQueue.shift();\n    this.audioPlaybackQueue = [];\n    this.isAudioFilePlaying = false;\n\n    if (this.currentProcessingEvent.type === 'call') {\n      this.updateCurrentCallDisplay(this.currentProcessingEvent.callData);\n      this.lastShownCallData = { ...this.currentProcessingEvent.callData };\n      if (this.dom.chimeAudio?.src) {\n        this.audioPlaybackQueue.push({ src: this.dom.chimeAudio.src, playerType: 'chime' });\n      }\n      this.currentProcessingEvent.chimeFinished = false;\n      if (this.currentProcessingEvent.ttsReady && Array.isArray(this.currentProcessingEvent.receivedTtsUrls)) {\n        this.currentProcessingEvent.receivedTtsUrls.forEach((url) => {\n          if (url) this.audioPlaybackQueue.push({ src: url, playerType: 'tts' });\n        });\n      }\n    } else if (this.currentProcessingEvent.type === 'announcement') {\n      if (this.lastShownCallData) {\n        this.updateCurrentCallDisplay(this.lastShownCallData);\n      }\n      if (this.dom.chimeAudio?.src) {\n        const alreadyHasChime = this.currentProcessingEvent.audioSequence?.some(\n          (item) => item.playerType === 'chime' || item.src === this.dom.chimeAudio.src,\n        );\n        if (!alreadyHasChime) {\n          this.audioPlaybackQueue.push({ src: this.dom.chimeAudio.src, playerType: 'chime' });\n        }\n      }\n      this.currentProcessingEvent.audioSequence.forEach((item) => this.audioPlaybackQueue.push({ ...item }));\n    }\n\n    if (this.audioPlaybackQueue.length > 0) {\n      this.playNextAudioFileInSequence();\n    } else {\n      this.finishCurrentEvent();\n    }\n  }\n\n  playNextAudioFileInSequence() {\n    if (this.audioPlaybackQueue.length === 0) {\n      this.isAudioFilePlaying = false;\n      if (this.currentProcessingEvent?.type === 'call') {\n        const current = this.currentProcessingEvent;\n        if (!current.chimeFinished) {\n          return;\n        }\n        if (Array.isArray(current.requiredTts) && current.requiredTts.length > 0 && !current.ttsReady) {\n          if (!current.ttsWaitTimeoutId) {\n            current.ttsWaitTimeoutId = setTimeout(() => {\n              if (this.currentProcessingEvent === current && !current.ttsReady) {\n                console.warn('SignageUI', 'TTS timed out for call', current.id, current.location);\n                current.requiredTts = [];\n                current.ttsReady = true;\n                current.ttsWaitTimeoutId = null;\n                this.playNextAudioFileInSequence();\n              }\n            }, TTS_TIMEOUT_DURATION);\n          }\n          return;\n        }\n      }\n      this.finishCurrentEvent();\n      return;\n    }\n\n    const nextItem = this.audioPlaybackQueue.shift();\n    const player = this.getAudioPlayerForType(nextItem.playerType);\n    if (!player || !nextItem.src) {\n      console.warn('SignageUI', 'Missing audio player or source for item', nextItem);\n      this.playNextAudioFileInSequence();\n      return;\n    }\n\n    this.isAudioFilePlaying = true;\n    player.pause();\n    player.currentTime = 0;\n    player.src = nextItem.src;\n    if (typeof player.load === 'function') {\n      player.load();\n    }\n    if ('playbackRate' in player) {\n      player.playbackRate = nextItem.playerType === 'chime' ? 1 : 1.1;\n    }\n    this.attachAudioListeners(player);\n\n    const markChimeAsPlaying = () => {\n      if (nextItem.playerType === 'chime' && this.currentProcessingEvent) {\n        this.currentProcessingEvent.chimeFinished = false;\n      }\n    };\n\n    let playResult;\n    try {\n      playResult = player.play();\n    } catch (error) {\n      console.error('SignageUI', 'Error during audio playback', nextItem, error);\n      this.handleAudioFileError({ target: player });\n      return;\n    }\n\n    if (playResult && typeof playResult.then === 'function') {\n      playResult\n        .then(() => {\n          markChimeAsPlaying();\n        })\n        .catch((error) => {\n          console.error('SignageUI', 'Error during audio playback', nextItem, error);\n          this.handleAudioFileError({ target: player });\n        });\n    } else {\n      markChimeAsPlaying();\n    }\n  }\n\n  handleAudioFileEnded = (event) => {\n    const player = event.target;\n    this.removeAudioListeners(player);\n    this.isAudioFilePlaying = false;\n\n    if (this.currentProcessingEvent && player === this.dom.chimeAudio && this.currentProcessingEvent.type === 'call') {\n      this.currentProcessingEvent.chimeFinished = true;\n    }\n\n    this.playNextAudioFileInSequence();\n  };\n\n  handleAudioFileError = (event) => {\n    const player = event.target;\n    console.error('SignageUI', 'Audio playback error', player?.currentSrc, player?.error);\n    this.removeAudioListeners(player);\n    this.isAudioFilePlaying = false;\n\n    if (this.currentProcessingEvent && player === this.dom.chimeAudio && this.currentProcessingEvent.type === 'call') {\n      this.currentProcessingEvent.chimeFinished = true;\n    }\n\n    this.playNextAudioFileInSequence();\n  };\n\n  attachAudioListeners(player) {\n    if (!player) return;\n    player.addEventListener('ended', this.handleAudioFileEnded);\n    player.addEventListener('error', this.handleAudioFileError);\n  }\n\n  removeAudioListeners(player) {\n    if (!player) return;\n    player.removeEventListener('ended', this.handleAudioFileEnded);\n    player.removeEventListener('error', this.handleAudioFileError);\n  }\n\n  finishCurrentEvent() {\n    if (this.currentProcessingEvent?.ttsWaitTimeoutId) {\n      clearTimeout(this.currentProcessingEvent.ttsWaitTimeoutId);\n      this.currentProcessingEvent.ttsWaitTimeoutId = null;\n    }\n    this.currentProcessingEvent = null;\n    this.audioPlaybackQueue = [];\n    this.isAudioFilePlaying = false;\n    this.processNextEventFromQueue();\n  }\n\n  getAudioPlayerForType(type) {\n    if (type === 'chime') return this.dom.chimeAudio;\n    if (type === 'tts') return this.dom.ttsAudioPlayer;\n    return this.dom.announcementAudioPlayer;\n  }\n\n  updateStaticPlaceholders() {\n    const labels = getLabels();\n    const historyLi = this.dom.listHistoryCalls?.querySelector('.italic');\n    if (historyLi && this.dom.listHistoryCalls.children.length <= 1) {\n      historyLi.textContent = labels.historyPlaceholder || 'Waiting for calls...';\n    }\n    const skippedLi = this.dom.listSkippedCalls?.querySelector('.italic');\n    if (skippedLi && this.dom.listSkippedCalls.children.length <= 1) {\n      skippedLi.textContent = labels.skippedPlaceholder || 'No skipped calls.';\n    }\n    if (this.dom.announcementPlaceholder) {\n      this.dom.announcementPlaceholder.textContent = labels.announcementPlaceholder || 'Announcements';\n    }\n  }\n\n  shouldDelayRefresh() {\n    const audioPlayers = [this.dom.chimeAudio, this.dom.announcementAudioPlayer, this.dom.ttsAudioPlayer];\n    const audioPlaying = audioPlayers.some((player) => player && !player.paused && !player.ended && player.currentTime > 0);\n    return audioPlaying || Boolean(this.currentProcessingEvent) || this.eventQueue.length > 0;\n  }\n\n  createClock() {\n    let clockIntervalId = null;\n    let toggleIntervalId = null;\n    let useBuddhistYear = false;\n\n    const renderClock = () => {\n      const now = new Date();\n      const day = String(now.getDate()).padStart(2, '0');\n      const month = String(now.getMonth() + 1).padStart(2, '0');\n      const hours = String(now.getHours()).padStart(2, '0');\n      const minutes = String(now.getMinutes()).padStart(2, '0');\n      const seconds = String(now.getSeconds()).padStart(2, '0');\n      let year = now.getFullYear();\n      if (useBuddhistYear) {\n        year += 543;\n      }\n      if (this.dom.timeElement) {\n        this.dom.timeElement.textContent = `${hours}:${minutes}:${seconds}`;\n      }\n      if (this.dom.dateElement) {\n        this.dom.dateElement.textContent = `${day}-${month}-${year}`;\n      }\n    };\n\n    return {\n      start: () => {\n        if (clockIntervalId || toggleIntervalId) return;\n        renderClock();\n        clockIntervalId = setInterval(renderClock, 1000);\n        toggleIntervalId = setInterval(() => {\n          useBuddhistYear = !useBuddhistYear;\n          renderClock();\n        }, 30_000);\n      },\n      stop: () => {\n        if (clockIntervalId) {\n          clearInterval(clockIntervalId);\n          clockIntervalId = null;\n        }\n        if (toggleIntervalId) {\n          clearInterval(toggleIntervalId);\n          toggleIntervalId = null;\n        }\n      },\n    };\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const page = new SignagePage();\n  page.init();\n});\n"],"names":["API_BASE_URL","SSE_URL","UI_TEXT","en","connecting","connected","disconnected","announcementPlaceholder","historyPlaceholder","skippedPlaceholder","loading","errorPrefix","successPrefix","th","currentLanguage","getCurrentLanguage","setCurrentLanguage","lang","window","currentGlobalLanguage","getLabels","renderCallList","container","items","options","_options","_options$maxItems","maxItems","Array","isArray","length","_options$placeholderT","placeholderText","_options$itemClass","itemClass","_options$placeholderC","placeholderClass","_options$highlightCla","highlightClass","_options$timestampCla","timestampClass","_options$reverse","reverse","_options$showTimestam","showTimestamp","_options$timestampFor","timestampFormatter","value","_options$sanitizer","sanitizer","String","innerHTML","data","slice","placeholder","document","createElement","className","trim","textContent","appendChild","forEach","entry","_entry$id","_entry$location","li","labelSpan","idStrong","filter","Boolean","join","id","arrowSpan","locationStrong","location","_entry$timestamp","tsSpan","timestamp","createSseIndicatorUpdater","element","_options2","_options2$statusClass","statusClassMap","_options2$baseClass","baseClass","_options2$setDataset","setDataset","_options2$fallbackMes","fallbackMessage","_options2$keepClasses","keepClasses","classMap","_extends","default","_temp","_ref","status","message","normalizedStatus","text","setAttribute","e","dataset","mappedClass","Object","prototype","hasOwnProperty","call","sanitizeText","temp","formatDisplayTime","isoTimestamp","date","Date","toLocaleTimeString","navigator","language","hour","minute","hour12","error","console","scheduleAutoRefresh","_ref$refreshIntervalM","refreshIntervalMs","_ref$warningMs","warningMs","_ref$shouldDelay","shouldDelay","_ref$onBeforeRefresh","onBeforeRefresh","warn","warnTimerId","refreshTimerId","cancelled","clearTimers","clearTimeout","attemptRefresh","info","setTimeout","reload","MAX_QUICK_RECONNECTION_ATTEMPTS","SHORT_RETRY_DELAY_MS","MEDIUM_RETRY_DELAY_MS","LONG_RETRY_DELAY_MS","HEARTBEAT_IDLE_THRESHOLD_MS","EventStream","url","_ref$labelProvider","labelProvider","_ref$heartbeatMs","heartbeatMs","eventSource","reconnectionAttempts","currentRetryDelay","retryTimeoutId","heartbeatTimerId","lastActivityAt","now","lastStatus","lastStatusMessage","listeners","Map","handleNamedEvent","bind","handleOnMessage","handleError","handleNetworkOnline","handleNetworkOffline","addEventListener","_proto","on","eventName","handler","_this","normalized","has","set","Set","handlers","get","add","off","delete","size","emit","detail","connect","_this2","setStatus","readyState","EventSource","OPEN","CONNECTING","clearRetryTimer","ensureHeartbeatTimer","scheduleReconnect","onopen","markActivity","onmessage","onerror","disconnect","clearHeartbeatTimer","closeSource","destroy","clear","removeEventListener","event","processFrame","type","_this$eventSource","Event","CLOSED","startsWith","parsedPayload","eventKey","payload","JSON","parse","rawType","normalizeType","undefined","_unused","rest","_objectWithoutPropertiesLoose","_excluded","_this3","labels","seconds","shouldSignalDisconnected","statusKey","defaultMessage","_temp2","_ref2","resolvedMessage","_this4","setInterval","syncStatusWithReadyState","Math","max","floor","clearInterval","close","toLowerCase","replace","_this$eventSource2","MAX_HISTORY_ITEMS_DISPLAY","MAX_SKIPPED_ITEMS_TO_DISPLAY","TTS_TIMEOUT_DURATION","SignagePage","handleAudioFileEnded","player","target","removeAudioListeners","isAudioFilePlaying","currentProcessingEvent","dom","chimeAudio","chimeFinished","playNextAudioFileInSequence","handleAudioFileError","currentSrc","queryDom","eventStream","updateSseIndicator","sseStatusIndicator","orderedTtsLangCodes","eventQueue","audioPlaybackQueue","bannerIntervalId","lastShownCallData","autoRefreshCancel","clock","createClock","SignageEventQueue","defineProperty","configurable","enumerable","byId","getElementById","callIdElement","locationElement","listHistoryCalls","listSkippedCalls","announcementBannerContainer","announcementAudioPlayer","ttsAudioPlayer","dateElement","timeElement","ensureRequiredElements","required","missing","entries","map","key","init","_init","_asyncToGenerator","_regenerator","m","_callee","pageLanguage","w","_context","n","a","documentElement","updateStaticPlaceholders","setupAutoRefresh","attachEventStreamHandlers","fetchOrderedLanguages","fetchInitialState","start","apply","arguments","shouldDelayRefresh","stop","_ref3","handleQueueUpdate","_ref4","handleAnnouncementStatus","_ref5","handleTtsComplete","_ref6","_fetchOrderedLanguages","_callee2","response","_t","_context2","p","fetch","v","ok","json","statusText","_fetchInitialState","_callee3","_yield$Promise$allSet","queueRes","annRes","queueState","announcementStatus","_t2","_context3","Promise","allSettled","updateQueueDisplay","current_call","updateCurrentCallDisplay","updateAnnouncementDisplay","processNextEventFromQueue","f","callData","completed_history","skipped_history","_this$ensureBannerPla","ensureBannerPlaceholder","wrapper","span","clearBannerContainer","current_banner_playlist","contains","classList","banners","currentIndex","displayBanner","mediaUrl","extension","split","pop","includes","img","src","alt","video","autoplay","muted","playsInline","loop","onended","play","catch","isImagePlaylist","every","ext","cycleMs","banner_cycle_interval_seconds","parentElement","placeholderWrapper","from","children","child","removeChild","newCall","_this$currentProcessi","shouldQueue","some","evt","callEvent","requiredTts","concat","receivedTtsUrls","ttsReady","toISOString","push","_this$currentProcessi2","playlist","current_audio_playlist","primarySrc","audioSequence","item","announcementEvent","playerType","ttsData","_this$currentProcessi3","_this5","audio_urls","targetEvent","find","langIndex","indexOf","splice","allTtsAvailable","ttsWaitTimeoutId","newItems","chimeIdx","findIndex","_this$audioPlaybackQu","_this$audioPlaybackQu2","_this6","shift","_this$dom$chimeAudio","_this$dom$chimeAudio2","_this$currentProcessi4","alreadyHasChime","finishCurrentEvent","_this7","_this$currentProcessi5","current","nextItem","getAudioPlayerForType","pause","currentTime","load","playbackRate","attachAudioListeners","markChimeAsPlaying","playResult","then","_this$currentProcessi6","_this$dom$listHistory","_this$dom$listSkipped","historyLi","querySelector","skippedLi","audioPlayers","audioPlaying","paused","ended","_this8","clockIntervalId","toggleIntervalId","useBuddhistYear","renderClock","day","getDate","padStart","month","getMonth","hours","getHours","minutes","getMinutes","getSeconds","year","getFullYear","page"],"mappings":"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"}