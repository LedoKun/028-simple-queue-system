diff --git a/node_modules/node-gtts/index.js b/node_modules/node-gtts/index.js
index dbd4df2..3f51a76 100644
--- a/node_modules/node-gtts/index.js
+++ b/node_modules/node-gtts/index.js
@@ -58,7 +58,10 @@ const LANGUAGES = {
   'th': 'Thai',
   'tr': 'Turkish',
   'vi': 'Vietnamese',
-  'cy': 'Welsh'
+  'cy': 'Welsh',
+  // Additional languages
+  'my': 'Burmese (Myanmar)',
+  'fil-PH': 'Filipino',
 }
 
 function Text2Speech(_lang, _debug) {
@@ -82,7 +85,7 @@ function Text2Speech(_lang, _debug) {
 function save(getArgs, filepath, text, callback) {
   var text_parts = tokenize(text);
   var total = text_parts.length;
-  async.eachSeries(text_parts, function(part, cb) {
+  async.eachSeries(text_parts, function (part, cb) {
     var index = text_parts.indexOf(part);
     var headers = getHeader();
     var args = getArgs(part, index, total);
@@ -92,10 +95,10 @@ function save(getArgs, filepath, text, callback) {
       flags: index > 0 ? 'a' : 'w'
     });
     request({
-        uri: fullUrl,
-        headers: headers,
-        method: 'GET'
-      })
+      uri: fullUrl,
+      headers: headers,
+      method: 'GET'
+    })
       .pipe(writeStream);
     writeStream.on('finish', cb);
     writeStream.on('error', cb);
@@ -106,7 +109,7 @@ function stream(getArgs, text) {
   var text_parts = tokenize(text);
   var total = text_parts.length;
 
-  return MultiStream(text_parts.map(function(part, index) {
+  return MultiStream(text_parts.map(function (part, index) {
     var headers = getHeader();
     var args = getArgs(part, index, total);
     var fullUrl = GOOGLE_TTS_URL + args
@@ -123,11 +126,11 @@ function getHeader() {
   var headers = {
     "User-Agent": fakeUa()
   };
-  console.log('headers', headers);
+  // console.log('headers', headers);
   return headers;
 }
 
-function getArgsFactory(lang){
+function getArgsFactory(lang) {
   return function (text, index, total) {
     var textlen = text.length;
     var encodedText = encodeURIComponent(text);
@@ -142,7 +145,7 @@ function tokenize(text) {
     throw new Error('No text to speak');
 
   var punc = '¡!()[]¿?.,;:—«»\n ';
-  var punc_list = punc.split('').map(function(char) {
+  var punc_list = punc.split('').map(function (char) {
     return escapeStringRegexp(char);
   });
 
@@ -171,18 +174,18 @@ function createServer(getArgs, port) {
   var http = require("http");
   var url = require('url');
 
-  var server = http.createServer(function(req, res) {
+  var server = http.createServer(function (req, res) {
     var queryData = url.parse(req.url, true).query;
     var argsCallback = getArgs;
     if (queryData && queryData.lang && LANGUAGES[queryData.lang]) {
       argsCallback = getArgsFactory(queryData.lang);
     }
     if (queryData && queryData.text) {
-      res.writeHead(200, {'Content-Type': 'audio/mpeg'});
+      res.writeHead(200, { 'Content-Type': 'audio/mpeg' });
       stream(argsCallback, queryData.text).pipe(res);
     } else {
       console.log(req.headers);
-      res.writeHead(200, {'Content-Type': 'application/json'});
+      res.writeHead(200, { 'Content-Type': 'application/json' });
       res.end(JSON.stringify({
         code: -1,
         message: `Missing text. Please try: ${req.headers.host}?text=your+text`
